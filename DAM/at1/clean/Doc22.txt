graph theory area mathematics analyses relationships pairs objects typically graphs consist nodes points representing objects edges lines depicting relationships objects as one might imagine graphs extremely useful visualizing relationships objects in post i provide detailed introduction network graphs using r premier open source tool statistics package calculations excellent gephi software visualization the article organised follows i begin defining problem spend time developing concepts used constructing graph following i data preparation r finally build network graph using gephi the problem in introductory article cluster analysis i provided indepth introduction couple algorithms can used categorise documents automatically although techniques useful provide feel relationships different documents collection interest in present piece i show network graphs can used visualise similaritybased relationships within corpus document similarity there many ways quantify similarity documents a popular method use notion distance documents the basic idea simple documents many words common closer share fewer words the problem distance however can skewed word count documents unusually high word count will show outliers even though may similar terms words used documents corpus for reason will use another related measure similarity suffer problem minute representing documents mathematically as i explained article cluster analysis document can represented point conceptual space dimensionality equal number distinct words collection documents i revisit build explanation say one simple document consisting words five plus six one can represent mathematically dimensional space individual words represented three axis see figure here word coordinate axis dimension now one connects point representing document point a figure origin wordspace one vector case directed line connecting point question origin specifically point a can represented coordinates space this nice quantitative representation fact words five plus one appear document exactly note however weve assumed order words matter this reasonable assumption cases always figure figure as another example consider document b consists two words five plus see fig clearly document shares similarity document identical indeed becomes evident note document point b simply point latex space tells us two coordinates wordsfrequencies common document point a figure figure to sure realistic collection documents large number distinct words wed work high dimensional space nevertheless principle holds every document corpus can represented vector consisting directed line origin point document corresponds cosine similarity now easy see two documents identical correspond point in words vectors coincide on hand completely dissimilar words common vectors will right angles what need therefore quantity varies depending whether two documents vectors dissimilarat right angles similar coincide parallel now heres ultracool thing high school maths class know trigonometric ratio exactly property cosine whats even cooler cosine angle two vectors simply dot product two vectors sum products individual elements vector divided product lengths two vectors in three dimensions can expressed mathematically costheta displaystyle fracx xy yz zsqrtxyzsqrtxyz two vectors xyz xyz theta angle two vectors see fig the upshot cosine angle vector representation two documents reasonable measure similarity this quantity sometimes referred cosine similarity well take similarity measure rest article the adjacency matrix if collection n documents can calculate similarity every pair documents a b previous section this give us set n numbers can conveniently represented matrix this sometimes called adjacency matrix beware though term many different meanings math literature i use sense specified since every document identical diagonal elements matrix will these similarities trivial know every document identical well set diagonal elements zero another important practical point visualizing every relationship going make messy graph there nn edges graph make impossible make sense handful documents for reason normal practice choose cutoff value similarity set zero building adjacency matrix using r we now enough background get main point article visualizing relationships documents the first step build adjacency matrix in order build document term matrix dtm collection documents process i dealt length introductory pieces text mining topic modeling in fact steps actually identical detailed second piece i will therefore avoid lengthy explanations however ive listed code brief comments interested trying document corpus can downloaded pdf listing r code can obtained ok heres code listing load text mining library librarytm set working directory modify path needed setwdcuserskailashdocumentstextmining load files corpus get listing txt files directory filenames listfilesgetwdpatterntxt read files character vector files lapplyfilenamesreadlines create corpus vector docs corpusvectorsourcefiles inspect particular document corpus writelinesascharacterdocs start preprocessing transform lower case docs tmmapdocscontenttransformertolower remove potentially problematic symbols tospace contenttransformerfunctionx pattern return gsubpattern x docs tmmapdocs tospace docs tmmapdocs tospace docs tmmapdocs tospace docs tmmapdocs tospace • docs tmmapdocs tospace docs tmmapdocs tospace remove punctuation docs tmmapdocs removepunctuation strip digits docs tmmapdocs removenumbers remove stopwords docs tmmapdocs removewords stopwordsenglish remove whitespace docs tmmapdocs stripwhitespace good practice check every now writelinesascharacterdocs stem document docs tmmapdocsstemdocument fix differences us aussie english general errors docs tmmapdocs contenttransformergsub pattern organiz replacement organ docs tmmapdocs contenttransformergsub pattern organis replacement organ docs tmmapdocs contenttransformergsub pattern andgovern replacement govern docs tmmapdocs contenttransformergsub pattern inenterpris replacement enterpris docs tmmapdocs contenttransformergsub pattern team replacement team define eliminate custom stopwords mystopwords ccan sayonewayuse alsohowevtellwill muchneedtaketendeven likeparticularrathersaid getwellmakeaskcomeend firsttwohelpoftenmay mightseesomeththingpoint postlookrightnowthink ve re anothputsetnewgood wantsurekindlargyesdayetc quitsincattemptlackseenawar littlevermoreovthoughfoundabl enoughfarearliawayachievdraw lastneverbriefbitentirbrief greatlot docs tmmapdocs removewords mystopwords inspect document check writelinesascharacterdocs create documentterm matrix dtm documenttermmatrixdocs the rows dtm document vectors akin vector representations documents a b discussed earlier the dtm therefore contains information need calculate cosine similarity every pair documents corpus via equation the r code implements taking care preliminaries convert dtm matrix masmatrixdtm write csv file writecsvmfiledtmeightlatecsv map filenames matrix row numbers numbers will used reference files network graph filekey cbindrownamesmfilenames writecsvfilekeyfilekeycsv compute cosine similarity document vectors converting distance matrix sets diagonal elements cosinesim functionx asdistxtxsqrtrowsumsx trowsumsx cs cosinesimm writecsvasmatrixcsfilecseightlatecsv adjacency matrix set entries certain threshold we choose half magnitude largest element matrix cutoff this arbitrary choice cscs maxcs cs roundcs writecsvasmatrixcsfileadjacencymatrixcsv a lines need brief explanation first although dtm matrix internally stored special form suitable sparse matrices we therefore explicitly convert proper matrix using calculate similarity second names i given documents way long use labels network diagram i therefore mapped document names row numbers well use network graph later the mapping back original document names stored filekeycsv for future reference mapping shown table file number name beyondentitiesandrelationshipstxt bigdatatxt conditionsovercausestxt emergentdesigninenterpriseittxt frominformationtoknowledgetxt fromthecoalfacetxt heraclitusandparmenidestxt ironiesofenterpriseittxt makingsenseoforganizationalchangetxt makingsenseofsensemakingtxt objectivityandtheethicaldimensionofdecisionmakingtxt ontheinherentambiguitiesofmanagingprojectstxt organisationalsurprisetxt professionalsorpoliticianstxt ritualsininformationsystemdesigntxt routinesandrealitytxt scapegoatsandsystemstxt sherlockholmesfailedprojectstxt sherlockholmesmgmtfetistxt sixheresiesforbitxt sixheresiesforenterprisearchitecturetxt thearchitectandtheapparitiontxt thecloudandthegrasstxt theconsultantsdilemmatxt thedangerwithintxt thedilemmasofenterpriseittxt theessenceofentrepreneurshiptxt threetypesofuncertaintytxt togafornottogaftxt understandingflexibilitytxt table file mappings finally distance function asdist cosine similarity function sets diagonal elements zero distance document zero  just complicated way saying document identical <U+653C><U+3E64><U+613C><U+3E30><U+623C><U+3E64><U+653C><U+3E64><U+623C><U+3E39><U+383C><U+3E32> the last three lines code simply implement cutoff i mentioned previous section the comments explain details i need say   finally brings us gephi visualizing document similarity using gephi gephi open source java based network analysis visualisation tool before going may want download install while youre may also want download excellent quick start tutorial go ill wait   to begin theres little formatting quirk need deal gephi expects separators csv files semicolons so first step open adjacency matrix created previous section adjacencymatrixcsv text editor replace commas semicolons once youve done fire gephi go file open navigate adjacency matrix stored load file if loads successfully see feedback panel shown figure by default gephi creates directed graph ie one edges arrows pointing one node another change undirected click ok figure gephi import feedback figure gephi import feedback once done click overview top left screen you end something like figure figure initial overview loading adjacency matrix figure initial overview loading adjacency matrix gephi sketched initial network diagram depicts relationships documents  needs bit work make look nicer informative the quickstart tutorial mentioned earlier describes various features can used manipulate prettify graph in remainder section i list i found useful gephi offers many do explore theres much i can cover introductory post first basics you can zoom pan using mouse wheel right button adjust edge thicknesses using slider next text formatting options bottom left main panel recenter graph via magnifying glass icon left display panel just size adjuster toggle node labels onoff clicking grey t symbol bottom left panel figure shows state diagram labels added edge thickness adjusted note graph may vary appearance figure graph node labels adjusted edge thicknesses figure graph node labels adjusted edge thicknesses the default layout graph ugly hard interpret lets work fixing to go layout panel left experiment different layouts see after messing around i found fruchtermannreingold force atlas options good graph in end i used force atlas repulsion strength default attraction strength default i also adjusted figure size node label font size graph panel center the result shown figure figure graph using force atlas layout figure graph using force atlas layout this much better for example now evident document connected one table tells us transcript conversation neil preston organisational change it nice colour code edgesnodes size nodes degree connectivity this can done via ranking panel layout area youve just working in nodes tab select degree rank parameter degree connectivity node hit apply select preferred colours via small icon just colour slider use colour slider adjust degree connectivity colour transitions occur do edges selecting weight rank parameterthis degree similarity two douments connected edge with bit playing around i got graph shown screenshot figure figure connectivitybased colouring edges nodes figure connectivitybased colouring edges nodes if want see numerical values rankings hit results list icon bottom left ranking panel you can see numerical ranking values nodes edges shown figures figure node ranking figure node ranking see left figure figure edge ranking figure edge ranking it easy see figure documents similar terms cosine ranking this makes sense pieces i ranted current state enterprise architecture first article ea general togaf framework if quick skim youll see fair bit common finally nice adjust node size reflect connectedness associated document you can via gem symbol top right ranking panel select appropriate min max sizes i chose defaults hit apply the node size now reflective connectivity node ie number documents cosine similar varying degrees the thickness edges reflect degree similarity see figure figure node sizes reflecting connectedness figure node sizes reflecting connectedness now looks good enough export to hit preview tab main panel make following adjustments default settings under node labels check show labels uncheck proportional size adjust font required size under edges change thickness check rescale weight hit refresh making adjustments you get something like fig figure export preview figure export preview all remains now deed hit export svgpdfpng export diagram my output displayed figure it clearly shows relationships different documents nodes corpus the nodes highest connectivity indicated via node size colour purple high green low strength similarity indicated edge thickness figure gephi network graph figure gephi network graph document corpus   brings us end journey wrapping the techniques text analysis enable us quantify relationships documents document similarity one relationship numerical measures good comprehensibility can enhanced meaningful visualisations indeed although stated objective article provide introduction creating network graphs using gephi r i hope ive succeeded secondary aim show document similarity can quantified visualised i sincerely hope youve found discussion interesting useful many thanks reading as always feedback greatly appreciated
